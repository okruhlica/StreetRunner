package core

object Worksheet {

// val x = new StreetFileCsvImporter("/Users/adamokruhlica/Desktop/scala/coursera/RunTheCity/src/ulice-psc.csv")
// val dataset = x.load("Bratislava")

// def cmpStreets(s1:String, s2:String) = (s1 compareToIgnoreCase s2) < 0
// dataset.filter(_.name.charAt(0) == 'C').map(_.name).sortWith(cmpStreets).length
 // dataset.length
 
 // def readURL(url:String):String = io.Source.fromURL(url).mkString
// readURL("https://maps.googleapis.com/maps/api/geocode/json?latlng=48.15097,17.083633&key=")

val gpxFile = "/Users/adamokruhlica/Desktop/RunBAFiles/gpx/20141010_161804.gpx"
                                                  //> gpxFile  : String = /Users/adamokruhlica/Desktop/RunBAFiles/gpx/20141010_161
                                                  //| 804.gpx
val loader = new RouteLoader                      //> loader  : core.RouteLoader = core.RouteLoader@4c5e176f
val route = loader.load(gpxFile)                  //> route  : core.Route = Route(List((17.0864,48.1529), (17.0864,48.1529), (17.0
                                                  //| 865,48.1529), (17.0865,48.1529), (17.0865,48.1530), (17.0865,48.1531), (17.0
                                                  //| 865,48.1533), (17.0865,48.1533), (17.0865,48.1534), (17.0865,48.1535), (17.0
                                                  //| 865,48.1536), (17.0865,48.1537), (17.0866,48.1538), (17.0867,48.1539), (17.0
                                                  //| 868,48.1540), (17.0869,48.1540), (17.0870,48.1540), (17.0870,48.1539), (17.0
                                                  //| 872,48.1539), (17.0873,48.1538), (17.0873,48.1538), (17.0874,48.1538), (17.0
                                                  //| 875,48.1537), (17.0875,48.1537), (17.0876,48.1537), (17.0876,48.1536), (17.0
                                                  //| 877,48.1536), (17.0879,48.1536), (17.0881,48.1536), (17.0884,48.1536), (17.0
                                                  //| 886,48.1536), (17.0888,48.1536), (17.0889,48.1536), (17.0891,48.1536), (17.0
                                                  //| 893,48.1536), (17.0896,48.1535), (17.0897,48.1535), (17.0898,48.1534), (17.0
                                                  //| 899,48.1534), (17.0900,48.1534), (17.0901,48.1534), (17.0901,48.1534), (17.0
                                                  //| 903,48.1534), (17.0904,48.1533), (17.0905,48.1533), (17.0906,48.1533), (17.0
                                                  //| 907,48.1533), (17.0908,4
                                                  //| Output exceeds cutoff limit.

for (pt <- route.points) println(pt)              //> (17.0864,48.1529)
                                                  //| (17.0864,48.1529)
                                                  //| (17.0865,48.1529)
                                                  //| (17.0865,48.1529)
                                                  //| (17.0865,48.1530)
                                                  //| (17.0865,48.1531)
                                                  //| (17.0865,48.1533)
                                                  //| (17.0865,48.1533)
                                                  //| (17.0865,48.1534)
                                                  //| (17.0865,48.1535)
                                                  //| (17.0865,48.1536)
                                                  //| (17.0865,48.1537)
                                                  //| (17.0866,48.1538)
                                                  //| (17.0867,48.1539)
                                                  //| (17.0868,48.1540)
                                                  //| (17.0869,48.1540)
                                                  //| (17.0870,48.1540)
                                                  //| (17.0870,48.1539)
                                                  //| (17.0872,48.1539)
                                                  //| (17.0873,48.1538)
                                                  //| (17.0873,48.1538)
                                                  //| (17.0874,48.1538)
                                                  //| (17.0875,48.1537)
                                                  //| (17.0875,48.1537)
                                                  //| (17.0876,48.1537)
                                                  //| (17.0876,48.1536)
                                                  //| (17.0877,48.1536)
                                                  //| (17.0879,48.1536)
                                                  //| (17.0881,48.1536)
                                                  //| (17.0884,48.1536)
                                                  //| (17.0886,48.1536)
                                                  //| (17.0888,48.1536)
                                                  //| (17.0889,48.1536)
                                                  //| (17.0891,48.1536)
                                                  //| (17.0893,48.1536)
                                                  //| (17.0896,48.1535)
                                                  //| (17.0897,48.1535)
                                                  //| (17.0898,48.1534)
                                                  //| (17.0899,48.1534)
                                                  //| (17.0900,48.1534)
                                                  //| (17.0901,48.1534)
                                                  //| (17.0901,48.1534)
                                                  //| (17.0903,48.1534)
                                                  //| (17.0904,48.1533)
                                                  //| (17.0905,48.1533)
                                                  //| (17.09
                                                  //| Output exceeds cutoff limit.
route.points.length                               //> res0: Int = 474
 
// (trk \ "trkseq").foreach { trkseq  =>
//  (trkseq \ "trkpt").foreach {  pt =>
//			val s = "(" + (pt \ "@lat").text + ","+(pt \ "@lon").text +")"
//			yield s
//			}
//		}
//	}
}